<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.7.RELEASE</version> <!-- Springboot版本1.5.7 -->
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>cn.swh</groupId>
	<artifactId>blog</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>blog</name>
	<description>Blog for Spring Boot</description>

	<properties>
		<java.version>1.8</java.version>
		<!--设置thymeleaf版本-->
		<thymeleaf.version>3.0.2.RELEASE</thymeleaf.version>
		<thymeleaf-layout-dialect.version>2.1.1</thymeleaf-layout-dialect.version>
	</properties>

	<dependencies>
		<!--JPA-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<!--模板引擎thymeleaf-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>

		</dependency>
		<!--web-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<!--aop-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>
		<!--开发工具devtools-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<!--MySQL-->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!--commonmark,markdown转HTML-->
		<dependency>
			<groupId>com.atlassian.commonmark</groupId>
			<artifactId>commonmark</artifactId>
			<version>0.10.0</version>
		</dependency>
		<dependency>
			<groupId>com.atlassian.commonmark</groupId>
			<artifactId>commonmark-ext-heading-anchor</artifactId>
			<version>0.10.0</version>
		</dependency>
		<dependency>
			<groupId>com.atlassian.commonmark</groupId>
			<artifactId>commonmark-ext-gfm-tables</artifactId>
			<version>0.10.0</version>
		</dependency>
		<!--apache commons io 上传图片用到了-->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.5</version>
		</dependency>

		<!--fastjson,序列化工具-->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>1.2.9</version>
		</dependency>





		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>



	<build>
		<plugins>
			<!--打包jar-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<!--不打包资源文件,exclude的目录不是src下面的，是以编译结果classes为根目录计算-->
					<excludes>
						<exclude>/config/**</exclude>
						<exclude>/META-INF/**</exclude>
						<exclude>/mybatis/**</exclude>
						<exclude>/public/**</exclude>
						<exclude>/schema/**</exclude>
						<exclude>/static/**</exclude>
						<exclude>/templates/**</exclude>
						<exclude>*.yml</exclude>
						<exclude>*.xml</exclude>
						<exclude>*.properties</exclude>
						<exclude>*.json</exclude>
						<exclude>*.bpmn</exclude>
					</excludes>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<!--MANIFEST.MF 中 Class-Path 加入前缀-->
							<classpathPrefix>lib/</classpathPrefix>
							<!--jar包不包含唯一版本标识-->
							<useUniqueVersions>false</useUniqueVersions>
							<!--指定入口类-->
							<mainClass>cn.swh.BlogApplication</mainClass>
						</manifest>
						<manifestEntries>
							<!--MANIFEST.MF 中 Class-Path 加入资源文件目录-->
							<Class-Path>./resources/</Class-Path>
						</manifestEntries>
					</archive>
					<outputDirectory>${project.build.directory}</outputDirectory>
				</configuration>
			</plugin>

			<!--拷贝依赖 copy-dependencies-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>
								${project.build.directory}/lib/
							</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!--拷贝资源文件 copy-resources-->
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<resources>
								<resource>
									<directory>src/main/resources</directory>
								</resource>
							</resources>
							<outputDirectory>${project.build.directory}/resources</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!--spring boot repackage，依赖 maven-jar-plugin 打包的jar包 重新打包成 spring boot 的jar包-->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<!--重写包含依赖，包含不存在的依赖，jar里没有pom里的依赖-->
					<includes>
						<include>
							<groupId>null</groupId>
							<artifactId>null</artifactId>
						</include>
					</includes>
					<layout>ZIP</layout>
					<!--使用外部配置文件，jar包里没有资源文件-->
					<addResources>true</addResources>
					<outputDirectory>${project.build.directory}</outputDirectory>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
						<configuration>
							<!--配置jar包特殊标识 配置后，保留原文件，生成新文件 *-run.jar -->
							<!--配置jar包特殊标识 不配置，原文件命名为 *.jar.original，生成新文件 *.jar -->
							<!--<classifier>run</classifier>-->
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>




</project>









		<!--
        <?xml version="1.0" encoding="UTF-8"?>
        <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
            <modelVersion>4.0.0</modelVersion>

            <groupId>cn.swh</groupId>
            <artifactId>blog</artifactId>
            <version>0.0.1-SNAPSHOT</version>
            <packaging>jar</packaging>

            <name>blog</name>
            <description>Demo project for Spring Boot</description>

            <parent>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-parent</artifactId>
                <version>1.5.7.RELEASE</version>&lt;!&ndash;SpringBoot版本1.5.7&ndash;&gt;
                <relativePath/> &lt;!&ndash; lookup parent from repository &ndash;&gt;
            </parent>

            <properties>
                <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
                <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
                <java.version>1.8</java.version>
                &lt;!&ndash;设置thymeleaf版本&ndash;&gt;
                <thymeleaf.version>3.0.2.RELEASE</thymeleaf.version>
                <thymeleaf-layout-dialect.version>2.1.1</thymeleaf-layout-dialect.version>
            </properties>


            <dependencies>

                <dependency>
                    <groupId>org.apache.directory.studio</groupId>
                    <artifactId>org.apache.commons.io</artifactId>
                    <version>2.4</version>
                </dependency>
                &lt;!&ndash;aop&ndash;&gt;
                <dependency>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-aop</artifactId>
                </dependency>
                &lt;!&ndash;JPA&ndash;&gt;
                <dependency>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-data-jpa</artifactId>
                </dependency>
                &lt;!&ndash;模板引擎thymeleaf&ndash;&gt;
                <dependency>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-thymeleaf</artifactId>
                </dependency>
                &lt;!&ndash;web&ndash;&gt;
                <dependency>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-web</artifactId>
                </dependency>


                <dependency>
                    <groupId>com.atlassian.commonmark</groupId>
                    <artifactId>commonmark</artifactId>
                    <version>0.10.0</version>
                </dependency>

                &lt;!&ndash;commonmark，markdown转HTML&ndash;&gt;
                <dependency>
                    <groupId>com.atlassian.commonmark</groupId>
                    <artifactId>commonmark</artifactId>
                    <version>0.10.0</version>
                </dependency>
                <dependency>
                    <groupId>com.atlassian.commonmark</groupId>
                    <artifactId>commonmark-ext-heading-anchor</artifactId>
                    <version>0.10.0</version>
                </dependency>
                <dependency>
                    <groupId>com.atlassian.commonmark</groupId>
                    <artifactId>commonmark-ext-gfm-tables</artifactId>
                    <version>0.10.0</version>
                </dependency>
                &lt;!&ndash;apache commons io 上传图片用到了&ndash;&gt;
                <dependency>
                    <groupId>commons-io</groupId>
                    <artifactId>commons-io</artifactId>
                    <version>2.5</version>
                </dependency>

                &lt;!&ndash;fastjson,序列化工具&ndash;&gt;
                <dependency>
                    <groupId>com.alibaba</groupId>
                    <artifactId>fastjson</artifactId>
                    <version>1.2.9</version>
                </dependency>

                &lt;!&ndash;开发工具devtools&ndash;&gt;
                <dependency>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-devtools</artifactId>
                    <scope>runtime</scope>
                </dependency>
                &lt;!&ndash;MySQL&ndash;&gt;
                <dependency>
                    <groupId>mysql</groupId>
                    <artifactId>mysql-connector-java</artifactId>
                    <scope>runtime</scope>
                </dependency>

                <dependency>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-test</artifactId>
                    <scope>test</scope>
                    <exclusions>
                        <exclusion>
                            <groupId>org.junit.vintage</groupId>
                            <artifactId>junit-vintage-engine</artifactId>
                        </exclusion>
                    </exclusions>
                </dependency>
            </dependencies>

            <build>
                &lt;!&ndash;用于打成jar包的名字&ndash;&gt;
                <finalName>myblog</finalName>
                <plugins>
                    &lt;!&ndash;打包jar&ndash;&gt;
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jar-plugin</artifactId>
                        <configuration>
                            &lt;!&ndash;不打包资源文件,exclude的目录不是src下面的，是以编译结果classes为根目录计算&ndash;&gt;
                            <excludes>
                                <exclude>/config/**</exclude>
                                <exclude>/META-INF/**</exclude>
                                <exclude>/mybatis/**</exclude>
                                <exclude>/public/**</exclude>
                                <exclude>/schema/**</exclude>
                                <exclude>/static/**</exclude>
                                <exclude>/templates/**</exclude>
                                <exclude>*.yml</exclude>
                                <exclude>*.xml</exclude>
                                <exclude>*.properties</exclude>
                                <exclude>*.json</exclude>
                                <exclude>*.bpmn</exclude>
                            </excludes>
                            <archive>
                                <manifest>
                                    <addClasspath>true</addClasspath>
                                    &lt;!&ndash;MANIFEST.MF 中 Class-Path 加入前缀&ndash;&gt;
                                    <classpathPrefix>lib/</classpathPrefix>
                                    &lt;!&ndash;jar包不包含唯一版本标识&ndash;&gt;
                                    <useUniqueVersions>false</useUniqueVersions>
                                    &lt;!&ndash;指定入口类&ndash;&gt;
                                    <mainClass>cn.swh.BlogApplication</mainClass>
                                </manifest>
                                <manifestEntries>
                                    &lt;!&ndash;MANIFEST.MF 中 Class-Path 加入资源文件目录&ndash;&gt;
                                    <Class-Path>./resources/</Class-Path>
                                </manifestEntries>
                            </archive>
                            <outputDirectory>${project.build.directory}</outputDirectory>
                        </configuration>
                    </plugin>

                    &lt;!&ndash;拷贝依赖 copy-dependencies&ndash;&gt;
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-dependencies</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy-dependencies</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>
                                        ${project.build.directory}/lib/
                                    </outputDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    &lt;!&ndash;拷贝资源文件 copy-resources&ndash;&gt;
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-resources</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <resources>
                                        <resource>
                                            <directory>src/main/resources</directory>
                                        </resource>
                                    </resources>
                                    <outputDirectory>${project.build.directory}/resources</outputDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    &lt;!&ndash;spring boot repackage，依赖 maven-jar-plugin 打包的jar包 重新打包成 spring boot 的jar包&ndash;&gt;
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <configuration>
                            &lt;!&ndash;重写包含依赖，包含不存在的依赖，jar里没有pom里的依赖&ndash;&gt;
                            <includes>
                                <include>
                                    <groupId>null</groupId>
                                    <artifactId>null</artifactId>
                                </include>
                            </includes>
                            <layout>ZIP</layout>
                            &lt;!&ndash;使用外部配置文件，jar包里没有资源文件&ndash;&gt;
                            <addResources>true</addResources>
                            <outputDirectory>${project.build.directory}</outputDirectory>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>repackage</goal>
                                </goals>
                                <configuration>
                                    &lt;!&ndash;配置jar包特殊标识 配置后，保留原文件，生成新文件 *-run.jar &ndash;&gt;
                                    &lt;!&ndash;配置jar包特殊标识 不配置，原文件命名为 *.jar.original，生成新文件 *.jar &ndash;&gt;
                                    &lt;!&ndash;<classifier>run</classifier>&ndash;&gt;
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>


        </project>
        -->
